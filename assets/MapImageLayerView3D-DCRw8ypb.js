import{r as i,m as o,a as p,hz as a,f as m}from"./index-CbbbHOt4.js";import{N as n}from"./DynamicLayerView3D-DWhmHXKc.js";import{i as l}from"./timeSupport-DLRj2uCp.js";import{S as u}from"./MapServiceLayerViewHelper-OeUEUI6v.js";import"./LayerView3D-C760sW1h.js";import"./projectExtentUtils-C0KfIa9s.js";import"./geometryServiceUtils-BX22qe8D.js";import"./ImageMaterial.glsl-uhFoEGBp.js";import"./DefaultLayouts-B3UC-2Ve.js";import"./TriangleMaterial-Da7VLEAW.js";import"./LayerView-BLifx4r8.js";import"./RefreshableLayerView-C6ihEpYt.js";import"./popupUtils-B4D69-oJ.js";const h=r=>{let e=class extends r{initialize(){this.exportImageParameters=new a({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var t;return((t=this.view)==null?void 0:t.floors)??null}get exportImageVersion(){var t;return(t=this.exportImageParameters)==null||t.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}get timeExtent(){var t;return l(this.layer,(t=this.view)==null?void 0:t.timeExtent,this._get("timeExtent"))}canResume(){var t;return!!super.canResume()&&!((t=this.timeExtent)!=null&&t.isEmpty)}};return i([o()],e.prototype,"exportImageParameters",void 0),i([o({readOnly:!0})],e.prototype,"floors",null),i([o({readOnly:!0})],e.prototype,"exportImageVersion",null),i([o()],e.prototype,"layer",void 0),i([o()],e.prototype,"suspended",void 0),i([o({readOnly:!0})],e.prototype,"timeExtent",null),e=i([p("esri.views.layers.MapImageLayerView")],e),e};let s=class extends h(n){constructor(){super(...arguments),this.type="map-image-3d"}initialize(){this._updatingHandles.add(()=>this.exportImageVersion,()=>this._updatingHandles.addPromise(this.refreshDebounced())),this._popupHighlightHelper=new u({createFetchPopupFeaturesQueryGeometry:(r,e)=>m(r,e,this.view),layerView:this,updatingHandles:this._updatingHandles})}destroy(){var r;(r=this._popupHighlightHelper)==null||r.destroy()}fetchPopupFeaturesAtLocation(r,e){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(r,e)}getFetchOptions(){return{timeExtent:this.timeExtent}}};s=i([p("esri.views.3d.layers.MapImageLayerView3D")],s);const V=s;export{V as default};
