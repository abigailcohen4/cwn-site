import{b as l,f as c}from"./builderUtils-mqo552R1.js";import{u as h}from"./offsetUtils-CgM2Z4dz.js";import{o as g}from"./shapeUtils-Ck1LmdfR.js";import{gg as d,g8 as u,aG as b,fU as P}from"./index-DHOd0012.js";import"./createPresetServiceEdit-HgWQNbMf.js";import"./affineTransformOperator-qr13CSRe.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./Transformation2D-CJmlXOyD.js";import"./apiConverter-4-E83tby.js";import"./ProjectionTransformation-JG_vlzn4.js";import"./jsonConverter-lHviFLeK.js";import"./Transformation-S_I94Un7.js";import"./offsetOperator-mCVXMnv6.js";import"./operatorOffset-BSUga71R.js";function q({templatePart:r,shape:o,edits:s,relationships:m,mode:a}){let i=[];if(d(o))i=g(o);else{if(!u(o))return;i=[o]}const p=l(r.builderConfig);for(const n of i){const e=n.clone();for(const f of e.paths){let t=new b({spatialReference:e.spatialReference,paths:[f],hasZ:e.hasZ,hasM:e.hasM});t&&p&&(t=h(t,p)),t&&c({templatePart:r,shape:t,edits:s,relationships:m,mode:a})}if(a==="digitizing"&&s.length>P)break}}const v=!1;export{q as execute,v as isAsync};
