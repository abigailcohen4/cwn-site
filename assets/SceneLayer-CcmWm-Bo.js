const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-Cd1DZZ4l.js","assets/index-DY6e7BdP.css","assets/Mesh-BDJYExuK.js","assets/MeshComponent-DFVj8f6m.js","assets/meshProperties-C4iW0Ukm.js","assets/MeshVertexAttributes-CrJK5MTk.js","assets/vertexSpaceConversion-DLgGawI7.js","assets/vec4-ClT4FVZv.js","assets/External-BK-NZEnS.js"])))=>i.map(i=>d[i]);
import{r,m as a,or as G,g3 as Q,sO as se,a as I,lq as k,bc as j,V as C,j as R,d as re,bb as M,be as ie,bg as ae,dG as v,b1 as oe,Z as ne,ho as le,al as X,bf as de,e as u,g7 as pe,_ as q,nD as ue,dB as ce,dC as ye,dD as he,g_ as fe,dE as me,hc as ge,hd as we,dt as ve,a1 as be,u as Ie,j5 as Le,eF as Se,of as Fe,lp as z,p as m,ak as _e,gQ as Te,a4 as $e,b$ as Oe,A as je,j4 as Ee,gE as J,sP as xe,sQ as Ae,sR as Pe,sS as Re,aH as De,sT as qe,hb as K,h7 as D,Y as Ne,aS as Ue,hj as W,sU as Ce,hl as Ve,sV as Ge,sW as Qe,j6 as ke,nW as Me,hm as ze,ls as Je,lt as H,lu as Ke,g$ as We,sX as He,j8 as Ze,j9 as Be,ja as Ye,lx as Xe,sY as et}from"./index-Cd1DZZ4l.js";import{R as tt,V as Z}from"./SceneService-1o1jr2Vw.js";import{s as st}from"./associatedFeatureServiceUtils-CqDnqW2_.js";import{t as rt}from"./capabilities-B4c8vV3b.js";import{p as ee,a as it,y as at,m as ot}from"./I3SLayerDefinitions-DLlt0LqK.js";import{a as nt}from"./lazyLayerLoader-qwVffc6N.js";import{t as lt}from"./meshSpatialReferenceScaleUtils-B-6jEIG6.js";import{V as dt}from"./I3SUtil-C1nF4vX8.js";import{n as pt,p as ut}from"./popupUtils-B4cxxR9u.js";import"./I3SIndexInfo-B3n9FMgv.js";import"./I3SBinaryReader-C4VHXQ3I.js";function te({associatedLayer:e,serviceUpdateTimeStamp:s}){var p;const t=(p=e==null?void 0:e.editingInfo)==null?void 0:p.lastEditDate,i=e==null?void 0:e.serverGens,n=t!=null,l=s!=null,d=n&&l&&s.lastUpdate!==t.getTime();return n&&(d||!l&&(i==null?void 0:i.minServerGen)!==(i==null?void 0:i.serverGen))}const ct=e=>{let s=class extends e{constructor(){super(...arguments),this.serviceTimeInfo=null}get timeInfo(){var n;const t=(n=this.associatedLayer)==null?void 0:n.timeInfo;if(t==null)return null;const i=t.clone();return k(i,this.fieldsIndex),i}set timeInfo(t){k(t,this.fieldsIndex),this._override("timeInfo",t)}get timeExtent(){var t;return(t=this.associatedLayer)==null?void 0:t.timeExtent}set timeExtent(t){this._override("timeExtent",t)}get timeOffset(){var t;return(t=this.associatedLayer)==null?void 0:t.timeOffset}set timeOffset(t){this._override("timeOffset",t)}get datesInUnknownTimezone(){var t;return((t=this.associatedLayer)==null?void 0:t.datesInUnknownTimezone)??!1}set datesInUnknownTimezone(t){this._override("datesInUnknownTimezone",t)}async loadTimeInfoFromService(t){const{serviceTimeInfo:i}=this;if(i==null)return;const{startTimeField:n,endTimeField:l}=i;if(n==null&&l==null||te({associatedLayer:this.associatedLayer,serviceUpdateTimeStamp:this.serviceUpdateTimeStamp}))return;const d=async f=>{var _;let c=null;try{const L=await((_=this.fetchStatistics)==null?void 0:_.call(this,f,t));c=L==null?void 0:L.stats}catch{}if(c==null)return null;const{minTimeStr:w,min:E,maxTimeStr:x,max:A}=c,F=f===n?w??E:x??A;return F!=null?new Date(F):null},[p,y]=await Promise.all([d(n),d(l)]);if(n!=null&&p==null||l!=null&&y==null)return;const h=new Q({start:p,end:y});this.setAtOrigin("timeInfo",new G({endField:l,startField:n,fullTimeExtent:h}),"service")}};return r([a({type:G,json:{read:!1,write:!1}})],s.prototype,"timeInfo",null),r([a({type:Q,json:{read:!1,write:!1}})],s.prototype,"timeExtent",null),r([a({type:se,json:{read:!1,write:!1}})],s.prototype,"timeOffset",null),r([a({type:Boolean,nonNullable:!0,json:{read:!1,write:!1}})],s.prototype,"datesInUnknownTimezone",null),r([a({type:S,readOnly:!0,json:{read:{source:"timeInfo"}}})],s.prototype,"serviceTimeInfo",void 0),s=r([I("esri.layers.mixins.TemporalSceneLayer")],s),s};let S=class extends j{constructor(){super(...arguments),this.endTimeField=null,this.startTimeField=null}};r([a({type:String})],S.prototype,"endTimeField",void 0),r([a({type:String})],S.prototype,"startTimeField",void 0),S=r([I("esri.layers.mixins.TemporalSceneLayer.SceneServiceTimeInfo")],S);let g=class extends j{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};r([a({type:String,json:{read:!0,write:{isRequired:!0}}})],g.prototype,"name",void 0),r([a({type:String,json:{read:!0,write:{isRequired:!0}}})],g.prototype,"field",void 0),r([a({type:[Number],json:{read:!0,write:!0}})],g.prototype,"currentRangeExtent",void 0),r([a({type:[Number],json:{read:!0,write:!0}})],g.prototype,"fullRangeExtent",void 0),r([a({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:{isRequired:!0}}})],g.prototype,"type",void 0),g=r([I("esri.layers.support.RangeInfo")],g);var $;let N=$=class extends j.JSONSupportMixin(C.ofType(R)){constructor(e){super(e)}clone(){return new $(this.items.map(e=>e.clone()))}write(e,s){return this.toJSON(s)}toJSON(e){var t,i;const s=(t=e==null?void 0:e.layer)==null?void 0:t.spatialReference;return s?this.toArray().map(n=>{var d;if(!s.equals(n.spatialReference)){if(!re(n.spatialReference,s))return(d=e==null?void 0:e.messages)==null||d.push(new M("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const p=new R;ie(n,p,s),n=p}const l=n.toJSON(e);return delete l.spatialReference,l}).filter(n=>n!=null):((i=e==null?void 0:e.messages)==null||i.push(new M("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map(n=>n.toJSON(e)))}static fromJSON(e,s){const t=new $;return e.forEach(i=>t.add(R.fromJSON(i,s))),t}};N=$=r([I("esri.layers.support.PolygonCollection")],N);const O=N;var U;let b=U=class extends j{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new O,this._geometriesSource=null}initialize(){this.addHandles(oe(()=>this.geometries,"after-changes",()=>this.geometries=this.geometries,ne))}readGeometries(e,s,t){Array.isArray(e)?this.geometries=O.fromJSON(e,t):this._geometriesSource={url:le(e,t),context:t}}async loadGeometries(e,s){if(this._geometriesSource==null)return;const{url:t,context:i}=this._geometriesSource,n=await X(t,{responseType:"json",signal:s==null?void 0:s.signal}),l=e.toJSON(),d=n.data.map(p=>({...p,spatialReference:l}));this.geometries=O.fromJSON(d,i),this._geometriesSource=null}clone(){const e=new U({geometries:de(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};r([a({type:["disjoint","contains"],nonNullable:!0,json:{write:{isRequired:!0}}})],b.prototype,"spatialRelationship",void 0),r([a({type:O,nonNullable:!0,json:{write:!0,origins:{"web-scene":{write:{isRequired:!0}}}}}),ae({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries",contentAddressed:!0})],b.prototype,"geometries",void 0),r([v(["web-scene","portal-item"],"geometries")],b.prototype,"readGeometries",null),b=U=r([I("esri.layers.support.SceneFilter")],b);const yt=b;async function ht({fieldName:e,statisticsInfo:s,errorContext:t,fieldsIndex:i,path:n,customParameters:l,apiKey:d,signal:p}){if(s==null)throw new u(`${t}:no-cached-statistics`,"Cached statistics are not available for this layer");const y=i.get(e);if(y==null)throw new u(`${t}:field-unexisting`,`Field '${e}' does not exist on the layer`);const h=s.find(w=>w.name===y.name);if(h==null)throw new u(`${t}:no-cached-statistics`,"Cached statistics for this attribute are not available");const f=pe(n,h.href),{data:c}=await X(f,{query:{f:"json",...l,token:d},responseType:"json",signal:p});return c}async function ft(e){const s=[];for(const t of e)t.name.toLowerCase().endsWith(".zip")?s.push(mt(t)):s.push(Promise.resolve(t));return(await Promise.all(s)).flat()}async function mt(e){const{BlobReader:s,ZipReader:t,BlobWriter:i}=await q(()=>import("./zipjs-wrapper-kBbGuXOp.js"),[]),n=[];return(await new t(new s(e)).getEntries()).forEach(d=>{var h;if(d.directory||/^__MACOS/i.test(d.filename))return;const p=new i,y=(h=d.getData)==null?void 0:h.call(d,p).then(f=>new File([f],d.filename));y&&n.push(y)}),Promise.all(n)}const gt=new Set(["3DObject","Point"]),B=ke();let o=class extends ct(ue(tt(ce(ye(he(fe(me(ge(we(ve.ClonableMixin(be))))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new C,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0,this.serviceItemId=void 0}normalizeCtorArgs(e,s){return typeof e=="string"?{url:e,...s}:e}destroy(){this._set("renderer",null),this.associatedLayer=Ie(this.associatedLayer)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,s){var i;const t=((i=this.getField(e))==null?void 0:i.domain)??null;return this.associatedLayer?Le(this.associatedLayer,e,s,t):t}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){var e;return((e=this.associatedLayer)==null?void 0:e.types)??[]}get typeIdField(){var e;return((e=this.associatedLayer)==null?void 0:e.typeIdField)??null}get templates(){var e;return((e=this.associatedLayer)==null?void 0:e.templates)??null}get formTemplate(){var e;return((e=this.associatedLayer)==null?void 0:e.formTemplate)??null}get attributeTableTemplate(){var e;return((e=this.associatedLayer)==null?void 0:e.attributeTableTemplate)??null}get fieldsIndex(){return new Se(this.fields)}readNodePages(e,s,t){return s.layerType==="Point"&&(e=s.pointNodePages),e==null||typeof e!="object"?null:ee.fromJSON(e,t)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get effectiveCapabilities(){var e;return this._capabilitiesFromAssociatedFeatureLayer((e=this.associatedLayer)==null?void 0:e.effectiveCapabilities)}get effectiveEditingEnabled(){return this.associatedLayer!=null&&Fe(this.associatedLayer)}get geometryType(){return wt[this.profile]||"mesh"}set renderer(e){z(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return e!=null&&typeof e=="object"||(e={}),e.color==null&&(e.color=!1),e}get capabilities(){var e;return this._capabilitiesFromAssociatedFeatureLayer((e=this.associatedLayer)==null?void 0:e.capabilities)}_capabilitiesFromAssociatedFeatureLayer(e){var V;e=e??rt;const{query:s,queryRelated:t,editing:{supportsGlobalId:i,supportsRollbackOnFailure:n,supportsUploadWithItemId:l,supportsGeometryUpdate:d,supportsReturnServiceEditsInSourceSpatialReference:p},data:{supportsZ:y,supportsM:h,isVersioned:f,supportsAttachment:c},operations:{supportsEditing:w,supportsAdd:E,supportsUpdate:x,supportsDelete:A,supportsQuery:F,supportsQueryAttachments:_,supportsAsyncConvert3D:L}}=e,T=e.operations.supportsChangeTracking,P=!!((V=this.associatedLayer)!=null&&V.infoFor3D);return{query:s,queryRelated:t,editing:{supportsGlobalId:i,supportsReturnServiceEditsInSourceSpatialReference:p,supportsRollbackOnFailure:n,supportsGeometryUpdate:P&&d,supportsUploadWithItemId:l},data:{supportsAttachment:c,supportsZ:y,supportsM:h,isVersioned:f},operations:{supportsQuery:F,supportsQueryAttachments:_,supportsEditing:w&&T,supportsAdd:P&&E&&T,supportsDelete:P&&A&&T,supportsUpdate:x&&T,supportsAsyncConvert3D:L}}}get editingEnabled(){var e;return this._isOverridden("editingEnabled")?this._get("editingEnabled"):((e=this.associatedLayer)==null?void 0:e.editingEnabled)??!1}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){var e;return((e=this.associatedLayer)==null?void 0:e.infoFor3D)??null}get relationships(){var e;return(e=this.associatedLayer)==null?void 0:e.relationships}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,s){return!e&&s.fields&&s.fields.some(t=>(t.type==="esriFieldTypeOID"&&(e=t.name),!!e)),e||void 0}readGlobalIdField(e,s){return!e&&s.fields&&s.fields.some(t=>(t.type==="esriFieldTypeGlobalID"&&(e=t.name),!!e)),e||void 0}get displayField(){var e;return((e=this.associatedLayer)==null?void 0:e.displayField)??null}readProfile(e,s){const t=s.store.profile;return t!=null&&Y[t]?Y[t]:(m.getLogger(this).error("Unknown or missing profile",{profile:t,layer:this}),"mesh-pyramids")}get useViewTime(){var e;return((e=this.associatedLayer)==null?void 0:e.useViewTime)??!0}set useViewTime(e){this._override("useViewTime",e)}load(e){return this.addResolvingPromise(this._load(e)),Promise.resolve(this)}async _load(e){const s=e!=null?e.signal:null;await this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(_e),await this._fetchService(s),await Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,s),this._setAssociatedFeatureLayer(s),this._loadFilterGeometries()]),this._validateElevationInfo(),this._applyAssociatedLayerOverrides(),this._populateFieldUsageInfo(),await this.loadTimeInfoFromService(e),await Te(this,{origin:"service"},s),z(this.renderer,this.fieldsIndex),await this.finishLoadEditablePortalLayer(e)}async beforeSave(){this.filter!=null&&(this.filter=this.filter.clone(),await this.load())}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(e){m.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null}}createQuery(){const e=new $e;return this.geometryType==="mesh"?this.capabilities.query.supportsReturnMesh&&(e.returnGeometry=!0):(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,s){return this._getAssociatedLayerForQuery().then(t=>t.queryExtent(e||this.createQuery(),s))}queryFeatureCount(e,s){return this._getAssociatedLayerForQuery().then(t=>t.queryFeatureCount(e||this.createQuery(),s))}queryFeatures(e,s){return this._getAssociatedLayerForQuery().then(t=>t.queryFeatures(e||this.createQuery(),s)).then(t=>{if(t!=null&&t.features)for(const i of t.features)i.layer=this,i.sourceLayer=this;return t})}async queryRelatedFeatures(e,s){if(await this.load(),!this.associatedLayer)throw new u("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeatures(e,s)}async queryRelatedFeaturesCount(e,s){if(await this.load(),!this.associatedLayer)throw new u("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeaturesCount(e,s)}async queryCachedAttributes(e,s){var i;const t=Oe(this.fieldsIndex,await pt(this,ut(this)));return dt(((i=this.parsedUrl)==null?void 0:i.path)??"",this.attributeStorageInfo??[],e,s,t,this.apiKey,this.customParameters)}async queryCachedFeature(e,s){const t=await this.queryCachedAttributes(e,[s]);if(!t||t.length===0)throw new u("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const i=new je;return i.attributes=t[0],i.layer=this,i.sourceLayer=this,i}queryObjectIds(e,s){return this._getAssociatedLayerForQuery().then(t=>t.queryObjectIds(e||this.createQuery(),s))}queryAttachments(e,s){return this._getAssociatedLayerForQuery().then(t=>t.queryAttachments(e,s))}getFieldUsageInfo(e){const s={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||s:(m.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),s)}createPopupTemplate(e){return Ee(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e!=null&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new u("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new u("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return this.statisticsInfo!=null&&this.statisticsInfo.some(s=>s.name===e)}async queryCachedStatistics(e,s){return await this.load(s),await this.fetchStatistics(e,s)}async saveAs(e,s){return this._debouncedSaveOperations(Z.SAVE_AS,{...s,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(Z.SAVE,e)}async applyEdits(e,s){const{applyEdits:t}=await q(()=>import("./index-Cd1DZZ4l.js").then(y=>y.Ga),__vite__mapDeps([0,1]));let i=s;await this.load();const n=this.associatedLayer;if(!n)throw new u(`${this.type}-layer:not-editable`,"Service is not editable");await n.load();const{globalIdField:l}=n,d=!!n.infoFor3D,p=(i==null?void 0:i.globalIdUsed)??!0;if(d&&l==null)throw new u(`${this.type}-layer:not-editable`,"Valid globalIdField expected on editable SceneLayer");if(d&&!p)throw new u(`${this.type}-layer:globalid-required`,"globalIdUsed must not be false for SceneLayer editing as globalIds are required.");return J(n.url)&&d&&e.deleteFeatures!=null&&l!=null&&(i={...i,globalIdToObjectId:await xe(n,e.deleteFeatures,l)}),t(this,n.source,e,i)}async uploadAssets(e,s){if(await this.load(),this.associatedLayer==null)throw new u(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,s)}on(e,s){return super.on(e,s)}async convertMesh(e,s){s??(s={});const t=c=>{throw m.getLogger(this).error(".convertMesh()",c.message),c};await this.load(),this.infoFor3D||t(new u("invalid:layer","SceneLayer has no capability for mesh conversion"));const i=await this.extractAndFilterFiles(e),n=i.reduce((c,w)=>Ae(this.infoFor3D,w)?c+1:c,0);n===0&&t(new Pe),n>1&&t(new Re);const l=this.spatialReference,d=s.location??new De({x:0,y:0,z:0,spatialReference:l}),p=d.spatialReference.isGeographic?"local":"georeferenced",{default:y}=await q(async()=>{const{default:c}=await import("./Mesh-BDJYExuK.js");return{default:c}},__vite__mapDeps([2,0,1,3,4,5,6,7,8])),h=y.createWithExternalSource(d,i,{vertexSpace:p,transform:lt(d.spatialReference),unitConversionDisabled:!0}),[f]=await this.uploadAssets([h],{...s,useAssetOrigin:!s.location});return f}async extractAndFilterFiles(e){await this.load();const s=this.infoFor3D;return s?(await ft(e)).filter(t=>qe(s,t)):e}validateLayer(e){if(e.layerType&&!gt.has(e.layerType))throw new u("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new u("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new u("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function s(t,i){let n=!1,l=!1;if(t==null)n=!0,l=!0;else{const d=i&&i.isGeographic;switch(t){case"east-north-up":case"earth-centered":n=!0,l=d;break;case"vertex-reference-frame":n=!0,l=!d;break;default:n=!1}}if(!n)throw new u("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!l)throw new u("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}s(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if(this.profile==="points")e.push("Point");else{if(this.profile!=="mesh-pyramids")throw new u("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){var e,s,t;if(this._fieldUsageInfo={},this.fields)for(const i of this.fields){const n=!!((e=this.attributeStorageInfo)!=null&&e.some(p=>p.name===i.name)),l=!!((t=(s=this.associatedLayer)==null?void 0:s.fields)!=null&&t.some(p=>p&&i.name===p.name)),d={supportsLabelingInfo:n,supportsRenderer:n,supportsPopupTemplate:n||l,supportsLayerQuery:l};this._fieldUsageInfo[i.name]=d}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides(),this._applyAssociatedLayerExtentOverride(),this._applyAssociatedLayerPrivileges()}_applyAssociatedLayerFieldsOverrides(){var s;if(!((s=this.associatedLayer)!=null&&s.fields))return;let e=null;for(const t of this.associatedLayer.fields){const i=this.getField(t.name);i?(!i.domain&&t.domain&&(i.domain=t.domain.clone()),i.editable=t.editable,i.nullable=t.nullable,i.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled"],s=K(this);for(let t=0;t<e.length;t++){const i=e[t],n=this.originIdOf(i),l=this.associatedLayer.originIdOf(i);n<l&&(l===D.SERVICE||l===D.PORTAL_ITEM)&&s.setAtOrigin(i,this.associatedLayer[i],l)}}_applyAssociatedLayerExtentOverride(){var s,t,i;const e=(s=this.associatedLayer)==null?void 0:s.getAtOrigin("fullExtent","service");((t=this.associatedLayer)==null?void 0:t.infoFor3D)==null||!e||!J((i=this.associatedLayer)==null?void 0:i.url)||!te(this)||K(this).setAtOrigin("fullExtent",e.clone(),D.SERVICE)}_applyAssociatedLayerPrivileges(){const e=this.associatedLayer;e&&(this._set("userHasEditingPrivileges",e.userHasEditingPrivileges),this._set("userHasFullEditingPrivileges",e.userHasFullEditingPrivileges),this._set("userHasUpdateItemPrivileges",e.userHasUpdateItemPrivileges))}async _setAssociatedFeatureLayer(e){if(["mesh-pyramids","points"].includes(this.profile))try{const{serverUrl:s,layerId:t,portalItem:i}=await st(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,customParameters:this.customParameters,apiKey:this.apiKey,signal:e}),n=await nt.FeatureLayer();this.associatedLayer=new n({url:s,customParameters:this.customParameters,layerId:t,portalItem:i}),await this.associatedLayer.load()}catch(s){Ne(s)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){await Ue(()=>this.popupEnabled&&this.popupTemplate!=null);const e=`this SceneLayer: ${this.title}`;this.attributeStorageInfo==null?m.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):m.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}_validateElevationInfo(){const e=this.elevationInfo;this.profile==="mesh-pyramids"&&W(m.getLogger(this),Ce("Mesh scene layers","relative-to-scene",e)),W(m.getLogger(this),Ve("Scene layers",e))}async fetchStatistics(e,s){var t;return await ht({fieldName:e,statisticsInfo:this.statisticsInfo,errorContext:"scenelayer",fieldsIndex:this.fieldsIndex,path:((t=this.parsedUrl)==null?void 0:t.path)??"",customParameters:this.customParameters,apiKey:this.apiKey,signal:s==null?void 0:s.signal})}};r([a({types:{key:"type",base:Qe,typeMap:{selection:Ge}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],o.prototype,"featureReduction",void 0),r([a({type:[g],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],o.prototype,"rangeInfos",void 0),r([a({json:{read:!1}})],o.prototype,"associatedLayer",void 0),r([a({type:["show","hide"]})],o.prototype,"listMode",void 0),r([a({type:["ArcGISSceneServiceLayer"]})],o.prototype,"operationalLayerType",void 0),r([a({json:{read:!1},readOnly:!0})],o.prototype,"type",void 0),r([a({...B.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"fields",void 0),r([a()],o.prototype,"types",null),r([a()],o.prototype,"typeIdField",null),r([a()],o.prototype,"templates",null),r([a()],o.prototype,"formTemplate",null),r([a()],o.prototype,"attributeTableTemplate",null),r([a({readOnly:!0,clonable:!1})],o.prototype,"fieldsIndex",null),r([a({type:Me,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],o.prototype,"floorInfo",void 0),r([a(B.outFields)],o.prototype,"outFields",void 0),r([a({type:ee,readOnly:!0,json:{read:!1}})],o.prototype,"nodePages",void 0),r([v("service","nodePages",["nodePages","pointNodePages"])],o.prototype,"readNodePages",null),r([a({type:[it],readOnly:!0})],o.prototype,"materialDefinitions",void 0),r([a({type:[at],readOnly:!0})],o.prototype,"textureSetDefinitions",void 0),r([a({type:[ot],readOnly:!0})],o.prototype,"geometryDefinitions",void 0),r([a({readOnly:!0})],o.prototype,"serviceUpdateTimeStamp",void 0),r([a({readOnly:!0})],o.prototype,"attributeStorageInfo",void 0),r([a({readOnly:!0})],o.prototype,"statisticsInfo",void 0),r([a({type:C.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],o.prototype,"excludeObjectIds",void 0),r([a({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],o.prototype,"definitionExpression",void 0),r([a({type:yt,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],o.prototype,"filter",void 0),r([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),r([a(ze)],o.prototype,"elevationInfo",null),r([a({readOnly:!0,json:{read:!1}})],o.prototype,"effectiveCapabilities",null),r([a({readOnly:!0})],o.prototype,"effectiveEditingEnabled",null),r([a({type:String})],o.prototype,"geometryType",null),r([a(Je)],o.prototype,"labelsVisible",void 0),r([a({type:[Ke],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:H},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:H},write:!0}})],o.prototype,"labelingInfo",void 0),r([a(We)],o.prototype,"legendEnabled",void 0),r([a({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,s){var i,n;if(typeof e=="number"&&e>=0&&e<=1)return e;const t=(n=(i=s.layerDefinition)==null?void 0:i.drawingInfo)==null?void 0:n.transparency;return t!==void 0?He(t):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],o.prototype,"opacity",void 0),r([a({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"priority",void 0),r([a({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"semantic",void 0),r([a({types:Ze,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],o.prototype,"renderer",null),r([a({json:{read:!1}})],o.prototype,"cachedDrawingInfo",void 0),r([v("service","cachedDrawingInfo")],o.prototype,"readCachedDrawingInfo",null),r([a({readOnly:!0,json:{read:!1}})],o.prototype,"capabilities",null),r([a({type:Boolean,json:{read:!1}})],o.prototype,"editingEnabled",null),r([a({readOnly:!0,json:{write:!1,read:!1}})],o.prototype,"infoFor3D",null),r([a({readOnly:!0,json:{write:!1,read:!1}})],o.prototype,"relationships",null),r([a(Be)],o.prototype,"popupEnabled",void 0),r([a({type:Ye,json:{name:"popupInfo",write:!0}})],o.prototype,"popupTemplate",void 0),r([a({readOnly:!0,json:{read:!1}})],o.prototype,"defaultPopupTemplate",null),r([a({type:String,json:{read:!1}})],o.prototype,"objectIdField",void 0),r([v("service","objectIdField",["objectIdField","fields"])],o.prototype,"readObjectIdField",null),r([a({type:String,json:{read:!1}})],o.prototype,"globalIdField",void 0),r([v("service","globalIdField",["globalIdField","fields"])],o.prototype,"readGlobalIdField",null),r([a({readOnly:!0,type:String,json:{read:!1}})],o.prototype,"displayField",null),r([a({type:String,json:{read:!1}})],o.prototype,"profile",void 0),r([v("service","profile",["store.profile"])],o.prototype,"readProfile",null),r([a({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],o.prototype,"normalReferenceFrame",void 0),r([a(Xe)],o.prototype,"screenSizePerspectiveEnabled",void 0),r([a({json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"serviceItemId",void 0),r([a(et)],o.prototype,"useViewTime",null),o=r([I("esri.layers.SceneLayer")],o);const Y={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},wt={"mesh-pyramids":"mesh",points:"point"},xt=o;export{xt as default};
