import{bL as l,e9 as R,cb as M,c7 as P,ea as S,eb as T}from"./index-Cd1DZZ4l.js";function k(e,s){const a=e==null?void 0:e.geometry;if(!e||(a==null?void 0:a.type)!=="mesh"||!s)return;const{renderCoordsHelper:m,elevationProvider:x}=s,{camera:h}=s.state,{extent:t}=a,{center:d,spatialReference:r}=t,b=l(r),n=R(r),z=l(m.spatialReference),$=t.width*b,v=t.height*n,u=(t.zmax??0)*n,p=u-(t.zmin??0)*n,w=Math.max($,v,p)/z,{x:c,y:i}=d,f=d.z??0;M(o,c,i,f),m.toRenderCoords(o,r,o);const g=w/h.computeScreenPixelSizeAt(o);if(g>h.width*H)return"meshTooClose";if(g<A)return"meshTooFar";const y=S(e),{absoluteZ:C}=T(c,i,u,r,s,y);return C<(x.getElevation(c,i,f,r,"ground")??0)*n+p*U?"meshUnderground":"mesh"}const A=20,H=1,U=.1,o=P();export{k as getDrawMeshHelpMessage};
