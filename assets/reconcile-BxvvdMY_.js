import{bc as f,r as o,m as r,a as g,e as c,aO as v,g5 as w,g6 as y,al as j}from"./index-Cd1DZZ4l.js";import{r as P}from"./serverVersionUtils-BzMQB1JD.js";let t=class extends f{constructor(e){super(e),this.hasConflicts=!1,this.moment=null,this.didPost=!1,this.success=!1}};o([r({type:Boolean,json:{write:!0}})],t.prototype,"hasConflicts",void 0),o([r({type:Date,json:{type:Number,write:{writer:(e,s)=>{s.moment=e?e.getTime():null}}}})],t.prototype,"moment",void 0),o([r({type:Boolean,json:{write:!0}})],t.prototype,"didPost",void 0),o([r({type:Boolean,json:{write:!0}})],t.prototype,"success",void 0),t=o([g("esri.rest.versionManagement.gdbVersion.support.ReconcileResult")],t);const S=t,n=new Map;async function B(e,s,l,p){n.has(e)||await P(n,e);const i=n.get(e);if(((i==null?void 0:i.serverVersion)??0)<=11.1)throw new c("reconcile:enterprise-version","versioning API requires ArcGIS Enterprise version 11.2 or higher");if(!s)throw new c("reconcile:missing-guid","guid for version is missing");const a=v(e),u=l.toJSON(),m=w(a.query,{query:y({...u,f:"json"}),...p,method:"post"});s.startsWith("{")&&(s=s.slice(1,-1));const h=`${a.path}/versions/${s}/reconcile`,{data:d}=await j(h,m);return S.fromJSON(d)}export{B as reconcile,n as serverVersionCacheMap};
