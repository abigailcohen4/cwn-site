import{b as l,f as c}from"./builderUtils-DN9rnK8e.js";import{u as h}from"./offsetUtils-CvqM8pod.js";import{o as g}from"./shapeUtils-DI33TR1h.js";import{gg as d,g8 as u,aG as b,fU as P}from"./index-oK64vsa1.js";import"./createPresetServiceEdit-WY4q3EMk.js";import"./affineTransformOperator-C_t2g26f.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./Transformation2D-CJmlXOyD.js";import"./apiConverter-rUKGJgNH.js";import"./ProjectionTransformation-C93X09sq.js";import"./jsonConverter-DoaGDft_.js";import"./Transformation-BNttyTzx.js";import"./offsetOperator-BoJWnNYv.js";import"./operatorOffset-B5jLIngp.js";function q({templatePart:r,shape:o,edits:s,relationships:m,mode:a}){let i=[];if(d(o))i=g(o);else{if(!u(o))return;i=[o]}const p=l(r.builderConfig);for(const n of i){const e=n.clone();for(const f of e.paths){let t=new b({spatialReference:e.spatialReference,paths:[f],hasZ:e.hasZ,hasM:e.hasM});t&&p&&(t=h(t,p)),t&&c({templatePart:r,shape:t,edits:s,relationships:m,mode:a})}if(a==="digitizing"&&s.length>P)break}}const v=!1;export{q as execute,v as isAsync};
