import{w as n,y as p,z as d,P as l,A as m,r,m as i,B as u,a as h}from"./index-BgufZbH7.js";import{F as c}from"./I3SMeshView3D-BmSCyewO.js";import{l as g}from"./LayerView3D-B9CGt8A5.js";import{y}from"./LayerView-DB0xK6li.js";import"./Transform-Bqr0vbIP.js";import"./RenderTexture-ClcK6n9P.js";import"./I3SOverrides-CLobOLFk.js";import"./resourceUtils-0bSrDEf4.js";import"./I3SNode-BadRvb82.js";import"./I3SUtil-DzBeF6WI.js";import"./I3SBinaryReader-Cf4S2Jf_.js";import"./SceneModification-DnjjI3VB.js";import"./ExtentSet-Fo4eNUK1.js";import"./optimizedFeatureQueryEngineAdapter-DUUY3wFE.js";import"./PooledRBush-2EAqzD8b.js";import"./quickselect-QQC62dOK.js";import"./popupUtils-CiagyTQS.js";import"./SceneLayerWorker-BYWDtTOF.js";import"./attributeUtils-Dc8--CBJ.js";import"./highlightUtils-BQy9XZj5.js";const f=.2;let e=class extends c(g(y)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this._applySSAO=!n("disable-feature:im-ssao"),this._shadeNormals=!!n("enable-feature:im-shading"),this.drapeTargetType=p.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,a,s,o;return((o=(s=(a=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:a.sceneService)==null?void 0:s.integratedMesh)==null?void 0:o.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?f:1}get visibleAtCurrentScale(){return d(this.i3slayer.effectiveScaleRange,this.view.scale)}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),l),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){return new m({layer:this.layer,sourceLayer:this.layer})}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const t=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),l),"modifications")}};r([i()],e.prototype,"layer",void 0),r([i()],e.prototype,"i3slayer",null),r([i(u)],e.prototype,"updatingProgress",void 0),r([i()],e.prototype,"updatingProgressValue",null),r([i()],e.prototype,"lodFactor",null),r([i({readOnly:!0})],e.prototype,"progressiveLoadFactor",null),r([i({readOnly:!0})],e.prototype,"visibleAtCurrentScale",null),e=r([h("esri.views.3d.layers.IntegratedMeshLayerView3D")],e);const z=e;export{z as default};
