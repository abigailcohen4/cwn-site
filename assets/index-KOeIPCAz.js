import{L as g,aq as w,s as z,E as p,av as b,x as k,i as y,ao as C,S as O}from"./index-D128Jkh1.js";import{g as D,w as U}from"./dom-BzsgFksH.js";import{b as I}from"./observers-BVLVUYME.js";import{m as L}from"./logger-BWTdjJ9Y.js";/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
v3.1.0 */const R={flipRtl:"flip-rtl"},f={},d={},m={s:16,m:24,l:32};function v({icon:s,scale:i}){const e=m[i],t=E(s),n=t.charAt(t.length-1)==="F";return`${n?t.substring(0,t.length-1):t}${e}${n?"F":""}`}async function P(s){const i=v(s),e=x(i);if(e)return e;d[i]||(d[i]=fetch(C(`./assets/icon/${i}.json`)).then(n=>n.json()).catch(()=>(L.error(`${s.icon} (${s.scale}) icon failed to load`),"")));const t=await d[i];return f[i]=t,t}function j(s){return x(v(s))}function x(s){return f[s]}function E(s){const i=!isNaN(Number(s.charAt(0))),e=s.split("-");if(e.length>0){const t=/[a-z]/i;s=e.map((n,a)=>n.replace(t,function(o,c){return a===0&&c===0?o:o.toUpperCase()})).join("")}return i?`i${s}`:s}const N=y`:host{display:inline-flex;color:var(--calcite-icon-color, var(--calcite-ui-icon-color, currentColor))}:host([scale=s]){inline-size:16px;block-size:16px;min-inline-size:16px;min-block-size:16px}:host([scale=m]){inline-size:24px;block-size:24px;min-inline-size:24px;min-block-size:24px}:host([scale=l]){inline-size:32px;block-size:32px;min-inline-size:32px;min-block-size:32px}.flip-rtl{transform:scaleX(-1)}.svg{display:block}:host([hidden]){display:none}[hidden]{display:none}`,r=class r extends g{constructor(){super(...arguments),this.visible=!1,this.flipRtl=!1,this.icon=null,this.preload=!1,this.scale="m"}connectedCallback(){if(super.connectedCallback(),this.preload){this.visible=!0,this.loadIconPathData();return}this.visible||this.waitUntilVisible(()=>{this.visible=!0,this.loadIconPathData()})}willUpdate(i){(i.has("icon")&&(this.hasUpdated||this.icon!==null)||i.has("scale")&&(this.hasUpdated||this.scale!=="m"))&&this.loadIconPathData()}disconnectedCallback(){var i;super.disconnectedCallback(),(i=this.intersectionObserver)==null||i.disconnect(),this.intersectionObserver=null}async loadIconPathData(){const{icon:i,scale:e,visible:t}=this;if(!w()||!i||!t)return;const n={icon:i,scale:e},a=j(n)||await P(n);i===this.icon&&(this.pathData=a)}waitUntilVisible(i){if(this.intersectionObserver=I("intersection",e=>{e.forEach(t=>{t.isIntersecting&&(this.intersectionObserver.disconnect(),this.intersectionObserver=null,i())})},{rootMargin:"50px"}),!this.intersectionObserver){i();return}this.intersectionObserver.observe(this.el)}render(){const{el:i,flipRtl:e,pathData:t,scale:n,textLabel:a}=this,o=D(i),c=m[n],h=!!a,$=[].concat(t||"");return this.el.ariaHidden=U(!h),this.el.ariaLabel=h?a:null,this.el.role=h?"img":null,k`<svg aria-hidden=true class=${z({[R.flipRtl]:o==="rtl"&&e,svg:!0})} fill=currentColor height=100% viewBox=${`0 0 ${c} ${c}`} width=100% xmlns=http://www.w3.org/2000/svg>${$.map(l=>typeof l=="string"?b`<path d=${l??p} />`:b`<path d=${l.d??p} opacity=${("opacity"in l?l.opacity:1)??p} />`)}</svg>`}};r.properties={pathData:16,visible:16,flipRtl:7,icon:3,preload:7,scale:3,textLabel:1},r.styles=N;let u=r;O("calcite-icon",u);export{u as Icon};
