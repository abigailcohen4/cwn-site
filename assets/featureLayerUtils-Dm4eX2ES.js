const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/CatalogLayer-7ydS8fnc.js","assets/index-BsXZDNwk.js","assets/index-DHNSHnXL.css","assets/utils-Bc_rO7kO.js","assets/ClassBreaksDefinition-DA2KetoE.js","assets/FeatureLayerSource-CJQFwNDM.js","assets/External-BywjxToe.js","assets/clientSideDefaults-DQQyl3cV.js","assets/QueryEngineCapabilities-B_pTbIiR.js","assets/QueryTask-2LWAHwCe.js","assets/executeForIds-CZyEd0EH.js","assets/query-Dut5PRZc.js","assets/pbfQueryUtils-CUnA2cKU.js","assets/pbf-qHsCUNdc.js","assets/executeQueryJSON-Cqz-3ThX.js","assets/OrientedImageryLayer-CLLgMYMh.js"])))=>i.map(i=>d[i]);
import{gh as w,ai as m,bA as B,gi as A,e as u,gj as K,gk as f,gl as V,gm as y,ge as j,gn as z,_ as I,go as q}from"./index-BsXZDNwk.js";import{P as H,w as O,d as Q,v as W,$ as X,p as x,f as Z,I as N,m as L}from"./utils-CMZfJe1S.js";import{a as aa,i as ea}from"./fetchService-C3b7a-F1.js";const v="Feature Service",T="feature-layer-utils",ta=`${T}-save`,ra=`${T}-save-as`,p=`${T}-saveall`,d=`${T}-saveall-as`;function P(a){return{isValid:q(a)&&(!("dynamicDataSource"in a)||!a.dynamicDataSource),errorMessage:"Feature layer should be a layer or table in a map or feature service"}}function b(a,e){const t=K(a,"portal-item");return e!=null&&e.isTable&&(t.layerContainerType="tables"),t}function R(a){const e=b(a),t=b(a);return t.layerContainerType="tables",{forLayers:e,forTables:t}}function D(a){const e=[],t=[];for(const{layer:r,layerJSON:o}of a)r.isTable?t.push(o):e.push(o);return{layers:e,tables:t}}function J(a){return D([a])}async function G(a,e){return/\/\d+\/?$/.test(a.url)?J(e[0]):U(e,a)}async function U(a,e){if(a.reverse(),!e)return D(a);const t=await sa(e,a);for(const r of a)F(r.layer,r.layerJSON,t);return la(t,a),t}async function sa(a,e){let t=await a.fetchData("json");if(na(t))return t;t||(t={}),oa(t);const{layer:{url:r,customParameters:o,apiKey:s}}=e[0];return await ia(t,{url:r??"",customParameters:o,apiKey:s},e.map(n=>n.layer.layerId)),t}function na(a){return!!(a&&Array.isArray(a.layers)&&Array.isArray(a.tables))}function oa(a){a.layers||(a.layers=[]),a.tables||(a.tables=[])}function la(a,e){const t=[],r=[];for(const{layer:o}of e){const{isTable:s,layerId:n}=o;s?r.push(n):t.push(n)}E(a.layers,t),E(a.tables,r)}function E(a,e){if(a.length<2)return;const t=[];for(const{id:r}of a)t.push(r);j(t.sort(S),e.slice().sort(S))&&a.sort((r,o)=>{const s=e.indexOf(r.id),n=e.indexOf(o.id);return s<n?-1:s>n?1:0})}function S(a,e){return a<e?-1:a>e?1:0}async function ia(a,e,t){const{url:r,customParameters:o,apiKey:s}=e,{serviceJSON:n,layersJSON:l}=await aa(r,{customParameters:o,apiKey:s}),i=_(a.layers,n.layers,t),c=_(a.tables,n.tables,t);a.layers=i.itemResources,a.tables=c.itemResources;const h=[...i.added,...c.added],C=l?[...l.layers,...l.tables]:[];await ca(a,h,r,C)}function _(a,e,t){const r=z(a,e,(s,n)=>s.id===n.id);a=a.filter(s=>!r.removed.some(n=>n.id===s.id));const o=r.added;return o.forEach(({id:s})=>{a.push({id:s})}),{itemResources:a,added:o.filter(({id:s})=>!t.includes(s))}}async function ca(a,e,t,r){const o=await ua(e),s=e.map(({id:n,type:l})=>new(o.get(l))({url:t,layerId:n,sourceJSON:r.find(({id:i})=>i===n)}));await Promise.allSettled(s.map(n=>n.load())),s.forEach(n=>{const{layerId:l,loaded:i,defaultPopupTemplate:c}=n;if(!i||c==null)return;const h={id:l,popupInfo:c.toJSON()};n.operationalLayerType!=="ArcGISFeatureLayer"&&(h.layerType=n.operationalLayerType),F(n,h,a)})}async function ua(a){const e=[];a.forEach(({type:o})=>{switch(ea(o)){case"CatalogLayer":e.push(I(()=>import("./CatalogLayer-7ydS8fnc.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14])).then(s=>s.default));break;case"FeatureLayer":e.push(I(()=>import("./index-BsXZDNwk.js").then(s=>s.G8),__vite__mapDeps([1,2])).then(s=>s.default));break;case"OrientedImageryLayer":e.push(I(()=>import("./OrientedImageryLayer-CLLgMYMh.js"),__vite__mapDeps([15,1,2])).then(s=>s.default))}});const t=await Promise.all(e),r=new Map;return a.forEach(({type:o},s)=>{r.set(o,t[s])}),r}function F(a,e,t){a.isTable?g(t.tables,e):g(t.layers,e)}function g(a,e){const t=a.findIndex(({id:r})=>r===e.id);t===-1?a.push(e):a[t]=e}function M(a,e){if(!a.length)throw new u(`${e}:missing-parameters`,"'layers' array should contain at least one feature layer")}function ya(a,e){const t=a.map(r=>r.portalItem.id);if(new Set(t).size>1)throw new u(`${e}:invalid-parameters`,"All layers in the 'layers' array should be loaded from the same portal item")}function Y(a,e){const t=a.map(r=>r.layerId);if(new Set(t).size!==t.length)throw new u(`${e}:invalid-parameters`,"'layers' array should contain only one instance each of layer or table in a feature service")}async function fa(a){M(a,p),await Promise.all(a.map(e=>e.load()));for(const e of a)x(e,p,P),Z({layer:e,itemType:v,errorNamePrefix:p});ya(a,p),Y(a,p)}function $(a,e){let t=0,r=0,o=0;for(const{layerType:s}of[...e.layers,...e.tables])switch(s){case"OrientedImageryLayer":t++;break;case"SubtypeGroupLayer":r++;break;case"SubtypeGroupTable":o++}f(a,y.ORIENTED_IMAGERY_LAYER,t>0),f(a,y.SUBTYPE_GROUP_LAYER,r>0),f(a,y.SUBTYPE_GROUP_TABLE,o>0)}function k(a,e,t){V(e,y.METADATA),f(e,y.MULTI_LAYER,a.length>1),f(e,y.SINGLE_LAYER,a.length===1),f(e,y.TABLE,t.tables.length>0&&t.layers.length===0),$(e,t)}async function pa(a,e,t){$(e,t)}async function da(a,e,t){const{url:r,layerId:o,title:s,fullExtent:n,isTable:l}=a,i=m(r);e.url=((i==null?void 0:i.serverType)==="FeatureServer"?r:`${r}/${o}`)??null,e.title||(e.title=s),e.extent=null,l||n==null||(e.extent=await A(n)),k([a],e,t)}function ma(a,e){for(const s of a){const n=s.parsedUrl.path,l=m(n);if(!(l==null?void 0:l.url.path))throw new u(`${e}:invalid-parameters`,L(s,`has unsupported url pattern: ${n}`),{layer:s});const c=l==null?void 0:l.serverType;if(c!=="FeatureServer"&&c!=="MapServer")throw new u(`${e}:invalid-parameters`,L(s,`has unsupported server type: ${c}`),{layer:s});if(c==="MapServer"&&a.length>1)throw new u(`${e}:invalid-parameters`,"Only one layer or table in a map service can be saved")}const t=m(a[0].parsedUrl.path),r=t==null?void 0:t.url.path;if(!a.every(s=>{const n=m(s.parsedUrl.path);return(n==null?void 0:n.url.path)===r}))throw new u(`${e}:invalid-parameters`,"'layers' array should only contain layers or tables that belong to the same feature service")}async function ha(a){M(a,d),await Promise.all(a.map(e=>e.load()));for(const e of a)x(e,d,P);ma(a,d),Y(a,d)}function wa(a,e){$(a,e),N(a)}async function ba(a,e,t){let r=0;for(const{isTable:n}of a)n||r++;const o=a[0].parsedUrl.path,s=m(o);if(e.url=(s==null?void 0:s.serverType)==="FeatureServer"?s.url.path:o,e.title||(e.title=s.title),e.extent=null,r>0){const n=a.map(l=>l.fullExtent).filter(B).reduce((l,i)=>l.clone().union(i));n&&(e.extent=await A(n))}k(a,e,t),N(e)}async function Ia(a,e){return H({layer:a,itemType:v,validateLayer:P,createJSONContext:t=>b(t,a),createItemData:(t,r)=>G(r,[t]),errorNamePrefix:ta,setItemProperties:pa},e)}async function $a(a,e){await fa(a);const t=a[0].portalItem,r=R(t),o=await Promise.all(a.map(n=>O(n,n.isTable?r.forTables:r.forLayers,e))),s=await G(t,a.map((n,l)=>({layer:n,layerJSON:o[l]})));return wa(t,s),await t.update({data:s}),await Promise.all(a.slice(1).map(n=>n.portalItem.reload())),w(r.forLayers),w(r.forTables),t.clone()}async function La(a,e,t){return X({layer:a,itemType:v,validateLayer:P,createJSONContext:r=>b(r,a),createItemData:(r,o)=>Promise.resolve(J(r)),errorNamePrefix:ra,newItem:e,setItemProperties:da},t)}async function Ea(a,e,t){await ha(a);const r=Q({itemType:v,errorNamePrefix:d,newItem:e}),o=R(r),s=await Promise.all(a.map(l=>O(l,l.isTable?o.forTables:o.forLayers,t))),n=await U(a.map((l,i)=>({layer:l,layerJSON:s[i]})));await ba(a,r,n),await W(r,n,t);for(const l of a)l.portalItem=r.clone();return w(o.forLayers),w(o.forTables),r}export{Ia as save,$a as saveAll,Ea as saveAllAs,La as saveAs};
