import{lL as q,D as F,F as P,V as j,hv as D,lM as H,dx as V,aE as J,ds as R,r as s,m as n,iz as G,a as N,jA as A,dC as U,dE as Y,a1 as k,bh as B}from"./index-oK64vsa1.js";import{d as T}from"./Viewshed-B5wWMnSq.js";const z=j.ofType(T);let o=class extends q{constructor(e){super(e),this.type="viewshed",this._extent=null}initialize(){this.addHandles(F(()=>this._computeExtent(),e=>{e.pending==null&&(this._extent=e.extent)},P))}get viewsheds(){return this._get("viewsheds")||new z}set viewsheds(e){this._set("viewsheds",D(e,this.viewsheds,z))}get spatialReference(){for(const e of this.viewsheds)if(e.observer!=null)return e.observer.spatialReference;return null}get extent(){return this._extent}get requiredPropertiesForEditing(){return this.viewsheds.items.map(({observer:e})=>e)}async waitComputeExtent(){const e=this._computeExtent();e.pending!=null&&await e.pending}_computeExtent(){const{spatialReference:e}=this;if(e==null)return{pending:null,extent:null};const i=this.viewsheds.filter(t=>t.observer!=null),c=i.map(t=>t.observer).toArray(),a=H(c,e);return a.pending!=null?{pending:a.pending,extent:null}:{pending:null,extent:a.geometries.map((t,u)=>{const x=i.at(u);return t!=null&&x!=null?this._computeViewshedExtent(this.viewsheds.at(u),t):null}).filter(t=>t!=null).reduce((t,u)=>I(t,u),null)}}_computeViewshedExtent(e,i){const{farDistance:c,heading:a,tilt:t,horizontalFieldOfView:u,verticalFieldOfView:x}=e,{spatialReference:f}=i,g=u/2,b=x/2,E=c/f.metersPerUnit,C=[V.normalize(a-g),a,V.normalize(a+g)],p=J.fromPoint(i),v=w=>{const d=C.map(l=>V.normalize(l-w));if(d[0]>d[2]||u===360)return E;const h=d.map(l=>Math.abs(l>180?360-l:l)).reduce((l,m)=>l>m?m:l);return h>90?0:E*Math.cos(R(h))};p.xmax+=v(90),p.xmin-=v(-90),p.ymax+=v(0),p.ymin-=v(180);const y=i.z;if(y!=null){let w=y,d=y;const h=t-90,l=A(h+b,-90,90),m=A(h-b,-90,90),O=f!=null&&f.isGeographic?c:E;w+=O*_(l),d+=O*_(m);const S=L(b)*O,M=_(h)*S*(1-L(g));t<90&&(w-=M),t>90&&(d-=M),p.zmax=Math.max(w,y),p.zmin=Math.min(d,y)}return p}clear(){this.viewsheds.removeAll()}};function I(e,i){return e==null?i:i==null?e:e.union(i)}function L(e){return Math.cos(R(e))}function _(e){return Math.sin(R(e))}s([n({type:["viewshed"]})],o.prototype,"type",void 0),s([n({cast:G,type:z,nonNullable:!0})],o.prototype,"viewsheds",null),s([n({readOnly:!0})],o.prototype,"spatialReference",null),s([n()],o.prototype,"_extent",void 0),s([n({readOnly:!0})],o.prototype,"extent",null),s([n({readOnly:!0})],o.prototype,"requiredPropertiesForEditing",null),o=s([N("esri.analysis.ViewshedAnalysis")],o);const $=o;let r=class extends U(Y(k)){constructor(e){super(e),this.type="viewshed",this.operationalLayerType="ViewshedLayer",this.source=new $,this.opacity=1}initialize(){this.addHandles(F(()=>this.source,(e,i)=>{i!=null&&i.parent===this&&(i.parent=null),e!=null&&(e.parent=this)},P))}async load(){return this.addResolvingPromise(this.source.waitComputeExtent()),this}get spatialReference(){return this.source.spatialReference}get fullExtent(){return this.source.extent}releaseAnalysis(e){this.source===e&&(this.source=new $)}get analysis(){return this.source}set analysis(e){this.source=e}get viewsheds(){return this.source.viewsheds}set viewsheds(e){this.source.viewsheds=e}writeViewsheds(e,i,c,a){i.viewsheds=e.filter(t=>t.isValid()).map(t=>t.toJSON(a)).toJSON()}};s([n({json:{read:!1},readOnly:!0})],r.prototype,"type",void 0),s([n({type:["ViewshedLayer"]})],r.prototype,"operationalLayerType",void 0),s([n({type:$,nonNullable:!0})],r.prototype,"source",void 0),s([n({readOnly:!0})],r.prototype,"spatialReference",null),s([n({readOnly:!0})],r.prototype,"fullExtent",null),s([n({readOnly:!0,json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],r.prototype,"opacity",void 0),s([n({type:["show","hide"]})],r.prototype,"listMode",void 0),s([n({type:j.ofType(T),json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{ignoreOrigin:!0}}}}})],r.prototype,"viewsheds",null),s([B("web-scene","viewsheds")],r.prototype,"writeViewsheds",null),r=s([N("esri.layers.ViewshedLayer")],r);const W=r;export{W as default};
