import{bn as z,bo as O,bp as C,aD as A,bq as D,br as G,aH as R,bs as Y,bt as S,bu as v,bv as V,e as U,bw as q}from"./index-oK64vsa1.js";import{m as E,B as L}from"./utils-Bjr1pCtr.js";let f=null;const P=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function _(e,t,n){return e.x<0?e.x+=t:e.x>n&&(e.x-=t),e}function Q(e,t,n,i){const s=D(n)?G(n):null,o=s?Math.round((s.valid[1]-s.valid[0])/t.scale[0]):null;return e.map(l=>{const a=new R(l.geometry);return Y(t,a,a),l.geometry=s?_(a,o??0,i[0]):a,l})}function W(e,t=18,n,i,s){const o=new Float64Array(i*s);t=Math.round(q(t));let l=Number.POSITIVE_INFINITY,a=Number.NEGATIVE_INFINITY;const I=S(n);for(const{geometry:p,attributes:F}of e){const{x:y,y:c}=p,$=Math.max(0,y-t),N=Math.max(0,c-t),M=Math.min(s,c+t),g=Math.min(i,y+t),h=+I(F);for(let m=N;m<M;m++)for(let d=$;d<g;d++){const w=m*i+d,x=V(d-y,m-c,t)*h,u=o[w]+=x;l=Math.min(l,u),a=Math.max(a,u)}}return{min:l,max:a}}function k(e){const t=P.exec(e);if(!t)return null;const{hh:n,mm:i,ss:s,ms:o}=t.groups;return Number(n)*v.hours+Number(i)*v.minutes+Number(s)*v.seconds+Number(o||0)}async function X(e,t,n=!0){if(!t)return[];const{field:i,field2:s,field3:o,fieldDelimiter:l,fieldInfos:a,timeZone:I}=e,p=i&&(a==null?void 0:a.find(u=>u.name.toLowerCase()===i.toLowerCase())),F=!!p&&z(p),y=!!p&&O(p),c=e.valueExpression,$=e.normalizationType,N=e.normalizationField,M=e.normalizationTotal,g=[],h=e.viewInfoParams;let m=null,d=null;if(c){if(!f){const{arcadeUtils:u}=await C();f=u}f.hasGeometryOperations(c)&&await f.enableGeometryOperations(),m=f.createFunction(c),d=h?f.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new A(h.spatialReference)}):null}const w=e.fieldInfos,x=!(t[0]&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic")&&w?{fields:w}:null;return t.forEach(u=>{const b=u.attributes;let r;if(c){const T=x?{...u,layer:x}:u,j=f.createExecContext(T,d,I);r=f.executeFunction(m,j)}else b&&(r=b[i],s?(r=`${E(r)}${l}${E(b[s])}`,o&&(r=`${r}${l}${E(b[o])}`)):typeof r=="string"&&n&&(y?r=r?new Date(r).getTime():null:F&&(r=r?k(r):null)));if($&&typeof r=="number"&&isFinite(r)){const T=b&&parseFloat(b[N]);r=L(r,$,T,M)}g.push(r)}),g}function ee(e){const t=e.field,n=e.normalizationType,i=e.normalizationField;let s;return n==="field"?s="(NOT "+i+" = 0)":n!=="log"&&n!=="natural-log"&&n!=="square-root"||(s=`(${t} > 0)`),s}function te(e,t,n){const i=t!=null?e+" >= "+t:"",s=n!=null?e+" <= "+n:"";let o="";return o=i&&s?B(i,s):i||s,o?"("+o+")":""}function B(e,t){let n=e??"";return t!=null&&t&&(n=n?"("+n+") AND ("+t+")":t),n}function ne(e,t){if(e&&e.spatialRelationship!=="intersects")return new U(t,"Only 'intersects' spatialRelationship is supported for featureFilter")}function ie(e,t,n){const i=H({layer:e,fields:t});if(i.length)return new U(n,"Unknown fields: "+i.join(", ")+". You can only use fields defined in the layer schema");const s=Z({layer:e,fields:t});return s.length?new U(n,"Unsupported fields: "+s.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function H(e){const t=e.layer;return e.fields.filter(n=>!t.getField(n))}function Z(e){const t=e.layer;return e.fields.filter(n=>{const i=t.getFieldUsageInfo(n);return!i||!i.supportsStatistics})}export{ee as F,k as I,ne as M,te as N,ie as T,B as U,X as b,W as w,Q as x};
