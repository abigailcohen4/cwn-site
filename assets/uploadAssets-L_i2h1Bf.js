import{g7 as y,al as m,aT as l,gE as J,lP as G,w as E,lQ as V,lR as W,lS as Q,lT as X,lU as Y,lV as Z,gJ as K,gG as ee,f_ as se,lW as ae,lX as R,aD as te,lY as ne,lZ as oe,i2 as re,ak as ie,l_ as ce,l$ as le,m0 as ue,p as pe}from"./index-CbbbHOt4.js";import{m as fe,N as me,b as de,a as x,i as N}from"./External-BuhHivmm.js";import{i as w,h as ge,e as A,m as ye,a as we}from"./progressUtils-46Gqw3Yl.js";import{t as he}from"./meshSpatialReferenceScaleUtils-BDZvNzxL.js";import{i as Pe,n as Te}from"./meshFeatureAttributes-CYO2f66n.js";const U=1e6,S=20*U,be=2e9,Ae=3;async function je({data:s,name:a,description:e},t,n){let r=null;try{const o=y(t,"uploads"),i=y(o,"info"),{data:u}=await m(i,{query:{f:"json"},responseType:"json"});l(n);const d=J(t),g=u.maxUploadFileSize*U,f=d?be:g,c=d?Math.min(S,g):S;if(s.size>f)throw new Error("Data too large");const k=y(o,"register"),{data:j}=await m(k,{query:{f:"json",itemName:ve(a),description:e},responseType:"json",method:"post"});if(l(n),!j.success)throw new Error("Registration failed");const{itemID:z}=j.item;r=y(o,z);const B=y(r,"uploadPart"),v=Math.ceil(s.size/c),h=new Array;for(let p=0;p<v;++p)h.push(s.slice(p*c,Math.min((p+1)*c,s.size)));const P=h.slice().reverse(),F=new Array,L=w(v,n==null?void 0:n.onProgress,"uploadItem"),M=async()=>{for(;P.length!==0;){const p=h.length-P.length,T=P.pop(),b=new FormData,$=L.simulate(p,ge(T.size));try{b.append("f","json"),b.append("file",T),b.append("partId",`${p}`);const{data:H}=await m(B,{timeout:0,body:b,responseType:"json",method:"post"});if(l(n),!H.success)throw new Error("Part upload failed")}finally{$.remove()}}};for(let p=0;p<Ae&&P.length!==0;++p)F.push(M());await Promise.all(F);const _=y(r,"commit"),{data:D}=await m(_,{query:{f:"json",parts:h.map((p,T)=>T).join(",")},responseType:"json",method:"post"});if(l(n),!D.success)throw new Error("Commit failed");return D.item}catch(o){if(r!=null){const i=y(r,"delete");await m(i,{query:{f:"json"},responseType:"json",method:"post"})}throw o}}function ve(s){return s.replaceAll("/","_").replaceAll("\\","_")}async function Ye(s,a,e){var r;const t=s.length;if(!t)return(r=e==null?void 0:e.onProgress)==null||r.call(e,1),[];const n=w(t,e==null?void 0:e.onProgress,"uploadAssets");return Promise.all(s.map((o,i)=>Fe(o,a,{...e,onProgress:n.makeOnProgress(i)})))}async function Fe(s,{layer:a,ongoingUploads:e},t){var o;const n=e.get(s);if(n)return n;if(!$e(a))throw new G;if(De(s,a))return(o=t==null?void 0:t.onProgress)==null||o.call(t,1),s;const r=Se(s,a,t);e.set(s,r);try{await r}finally{e.delete(s)}return s}function De(s,a){const{parsedUrl:e}=a;return e!=null&&s.metadata.externalSources.some(t=>fe(t,e))}async function Se(s,a,e){const{metadata:t}=s,{displaySource:n}=t,r=C(n==null?void 0:n.source,a,{checkForConversionRequired:E("enable-feature:georeferenced-uploads")}),o=r!=null?Ee(r,a,e):t.externalSources.length>0?Re(s,a,e):xe(s,a,e),i=await o;return l(e),s.addExternalSources([i]),s}async function Ee(s,a,e){return{source:await I(s,a,e),original:!0,unitConversionDisabled:!0}}async function Re(s,a,e){const t=O(a),{externalSources:n}=s.metadata,r=Ue(n,a);if(!r)throw new Q;const o=w(A.uploadConvertibleSource,e==null?void 0:e.onProgress,"uploadConvertibleSource"),i=await I(r,a,{onProgress:o.makeOnProgress("uploadEditSource")});s.addExternalSources([{source:i,original:!0}]);const u=r.reduce((g,{asset:f})=>f instanceof File?g+f.size:g,0),d=o.simulate("serviceAssetsToGlb",ye(u));try{const{source:g,transform:f,origin:c}=await Be(i,a,t);return s.transform=f,c&&(s.metadata.georeferenced=!0,e!=null&&e.useAssetOrigin&&(s.vertexSpace.origin=[c.x,c.y,c.z??0],s.spatialReference=c.spatialReference)),{source:g,unitConversionDisabled:!0}}finally{d.remove()}}async function xe(s,a,e){const t=w(A.uploadLocalMesh,e==null?void 0:e.onProgress,"uploadLocalMesh"),n=Ne(s,a,{...e,onProgress:t.makeOnProgress("meshToAssetBlob")});return{source:await q([n],a,{...e,onProgress:t.makeOnProgress("uploadAssetBlobs")}),extent:s.extent.clone(),original:!0}}async function Ne(s,a,e){const t=O(a),n=await s.load(e),r=await n.toBinaryGLTF({origin:n.origin,signal:e==null?void 0:e.signal,ignoreLocalTransform:!0,unitConversionDisabled:!0});return l(e),{blob:new Blob([r],{type:"model/gltf-binary"}),assetName:`${K()}.glb`,assetType:t}}function Ue(s,a){for(const e of s){const t=C(e.source,a);if(t)return t}return null}function C(s,{infoFor3D:a},e={}){if(!s)return null;const{supportedFormats:t,editFormats:n}=a,r=me(s),o=new Array,i=V(a),u=W(a);let d=!1;for(const g of r){const f=Ce(g,t);if(!f)return null;const{assetType:c}=f;if(e.checkForConversionRequired&&(c===i||c===u))return null;n.includes(c)&&(d=!0),o.push(f)}return d?o:null}function Ce(s,a){const e=de(s,a);return e?{asset:s,assetType:e}:null}async function I(s,a,e){return q(s.map(t=>Ie(t,e)),a,e)}async function q(s,a,e){const t=w(A.uploadAssetBlobs,e==null?void 0:e.onProgress,"uploadAssetBlobs"),n=await Oe(s,a,{...e,onProgress:t.makeOnProgress("prepareAssetItems")});l(e);const r=n.map(({item:i})=>i),{uploadResults:o}=await ke(r,a,{...e,onProgress:t.makeOnProgress("uploadAssetItems")});return l(e),s.map((i,u)=>ze(n[u],o[u],a))}async function Ie(s,a){const{asset:e,assetType:t}=s;if(e instanceof File)return{blob:e,assetName:e.name,assetType:t};const n=await e.toBlob(a);return l(a),{blob:n,assetName:e.assetName,assetType:t}}async function qe(s,a,e){const{blob:t,assetType:n,assetName:r}=s;let o=null;try{const i=await je({data:t,name:r},a.url,e);l(e),o={assetType:n,assetUploadId:i.itemID}}catch(i){ie(i),He().warnOnce(`Service ${a.url} does not support the REST Uploads API.`)}if(!o){const i=await ce(t);if(l(e),!i.isBase64)throw new le;o={assetType:n,assetData:i.data}}if(!o)throw new ue;return{item:o,assetName:r}}function Oe(s,a,e){const t=w(s.length,e==null?void 0:e.onProgress,"prepareAssetItems");return Promise.all(s.map(async(n,r)=>{const o=qe(await n,a,{...e,onProgress:t.makeOnProgress(r)});return l(e),o}))}async function ke(s,a,e){const t=we(e==null?void 0:e.onProgress);try{const n=await m(y(a.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(s)},method:"post",responseType:"json"});if(l(e),n.data.uploadResults.length!==s.length)throw new ne(s.length,n.data.uploadResults.length);return n.data}finally{t.remove()}}function ze(s,a,e){const{success:t}=a;if(!t){const{error:d}=a;throw new oe(s.assetName,d)}const{assetHash:n}=a,{assetName:r,item:{assetType:o}}=s,{infoFor3D:{supportedFormats:i}}=e,u=re(o,i);if(!u)throw new R(o);return new x(r,u,[new N(`${e.parsedUrl.path}/assets/${n}`,n)])}async function Be(s,a,e){var r;const t=s.map(({assetName:o,parts:i})=>({assetName:o,assetHash:i[0].partHash}));let n;try{const o=y(a.parsedUrl.path,"convert3D"),i=(r=a.capabilities)==null?void 0:r.operations.supportsAsyncConvert3D;n=(await(i?_e:Me)(o,{query:{f:"json",assets:JSON.stringify(t),transportType:"esriTransportTypeUrl",targetFormat:e,async:i},responseType:"json",timeout:0})).data}catch{throw new Z}return Le(a,n)}function Le(s,a){const e={source:a.assets.map(t=>{const n=ae(t.contentType,s.infoFor3D.supportedFormats);if(!n)throw new R(n);return new x(t.assetName,t.contentType,[new N(t.assetURL,t.assetHash)])}),origin:void 0,transform:void 0};if(E("enable-feature:georeferenced-uploads")&&a.transform){if(e.transform=Pe(a.transform),a.spatialReference){const t=te.fromJSON(a.spatialReference);e.origin=Te(a.transform,t)}}else e.transform=he(s.spatialReference);return e}function Me(s,a){return m(s,a)}async function _e(s,a){const e=(await m(s,a)).data.statusUrl;for(;;){const t=(await m(e,{query:{f:"json"},responseType:"json"})).data;switch(t.status){case"Completed":return m(t.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(t.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await ee(Je)}}function $e(s){return!!s.infoFor3D&&!!s.url}function O({infoFor3D:s}){const a=X(s);if(!a)throw new Y;return a}function He(){return pe.getLogger("esri.layers.graphics.sources.support.uploadAssets")}const Je=se(1e3);export{Ye as uploadAssets};
