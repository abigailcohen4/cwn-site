import{cz as N,aH as E,cA as S,cB as w,cC as m,cD as $,cE as y,cF as R,cG as G,cH as H,c7 as i,cx as P,cy as U,cI as I,cJ as b,cv as A,cK as F,cL as h,c9 as M,cM as x,cN as k,cO as q,cP as T,cQ as C,cR as z,cS as B,cT as J,cU as K}from"./index-Cd1DZZ4l.js";import{w as L}from"./InteractiveToolBase-BCJCMQoT.js";function Q(n,r){return O(n,()=>r)}function en(n){return O(n,r=>r.plane)}function O(n,r){const t=i(),s=i();let a=!1;return e=>{const c=r(e);if(e.action==="start"){const u=m(e.screenStart,$(y.get())),o=R(n.state.camera,u,g);o!=null&&(a=H(c,o,t))}if(!a)return null;const l=m(e.screenEnd,$(y.get())),d=R(n.state.camera,l,g);return d==null?null:H(c,d,s)?{...e,renderStart:t,renderEnd:s,plane:c,ray:d}:null}}function j(n,r,t=0,s=null,a=null){let e=null;return c=>{if(c.action==="start"&&(e=n.sceneIntersectionHelper.intersectElevationFromScreen(S(c.screenStart.x,c.screenStart.y),r,t,a),e!=null&&s!=null&&!w(e,e,s))||e==null)return null;const l=n.sceneIntersectionHelper.intersectElevationFromScreen(S(c.screenEnd.x,c.screenEnd.y),r,t,a);return l!=null&&(s==null||w(l,l,s))?{...c,mapStart:e,mapEnd:l}:null}}function _(n,r,t,s=null,a=null){return j(n,t,N(r,n,t),s,a)}function tn(n,r,t,s){const a=t.toMap(n.screenStart);return a!=null?_(r,a,t.elevationInfo,s):null}function V(n,r){const t=v,s=D,a=h();n.renderCoordsHelper.worldUpAtPosition(r,t);const e=M(k(a),t,x(s,r,n.state.camera.eye));return M(e,e,t),q(r,e,a)}function rn(n,r,t){let s=null;const a=new L;return a.next(Q(n,V(n,r))).next(W(n,r)).next(X(n,t)).next(e=>{e.mapEnd.x=e.mapStart.x,e.mapEnd.y=e.mapStart.y,s=e}),e=>(s=null,a.execute(e),s)}function W(n,r){const t=i(),s=T(r);n.renderCoordsHelper.worldUpAtPosition(r,t);const a=i(),e=i(),c=l=>(x(l,l,r),z(t,l,l),n.viewingMode==="global"&&T(l)*Math.sign(B(t,l))<.001-s&&x(l,J(l,t,.001),r),K(l,l,r),l);return l=>(l.renderStart=c(C(a,l.renderStart)),l.renderEnd=c(C(e,l.renderEnd)),l)}function sn(n,r){const t=s=>{const a=m(s,$(Y)),e=R(n.state.camera,a,g);if(e==null)return null;const c=F(r,e,v,D);return c==null?void 0:c[0]};return s=>{const a=t(s.screenStart);if(a==null)return null;const e=t(s.screenEnd);return e==null?null:{...s,renderStart:a,renderEnd:e}}}function X(n,r){const t=n.renderCoordsHelper;return s=>{const a=t.fromRenderCoords(s.renderStart,new E({spatialReference:r})),e=t.fromRenderCoords(s.renderEnd,new E({spatialReference:r}));return a!=null&&e!=null?{...s,mapStart:a,mapEnd:e}:null}}var p;function an(n){let r=null;return t=>{switch(t.action){case"start":r=n.disableDisplay();break;case"end":case"cancel":r!=null&&(r.remove(),r=null)}return t}}function ln(n,r=null){const t=P(n.state.viewingMode);t.options.selectionMode=!0,t.options.store=U.MIN,t.options.hud=!1;const s=S(),a={requiresGroundFeedback:!0,enableDraped:!0,exclude:new Set},e=i(),c=r??n.spatialReference,l=u=>{n.map.ground&&n.map.ground.opacity<1?a.exclude.add(I):a.exclude.delete(I),n.sceneIntersectionHelper.intersectIntersectorScreen(m(u,s),t,a);const o=t.results.min;let f;if(o.getIntersectionPoint(e))f=o.intersector===b.TERRAIN?p.GROUND:p.OTHER;else{if(!t.results.ground.getIntersectionPoint(e))return null;f=p.GROUND}return{location:n.renderCoordsHelper.fromRenderCoords(e,new E({spatialReference:c})),surfaceType:f}};let d;return u=>{if(u.action==="start"){const f=l(u.screenStart);d=f!=null?f.location:null}if(d==null)return null;const o=l(u.screenEnd);return(o==null?void 0:o.location)!=null?{...u,mapStart:d,mapEnd:o.location,surfaceType:o.surfaceType}:null}}(function(n){n[n.GROUND=0]="GROUND",n[n.OTHER=1]="OTHER"})(p||(p={}));const Y=A(),v=i(),D=i(),g=G();export{sn as A,ln as B,Q as C,X as F,rn as G,_ as M,tn as N,en as P,an as z};
