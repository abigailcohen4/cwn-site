import{b as l,f as c}from"./builderUtils-B-5Q1cLT.js";import{u as h}from"./offsetUtils-CEmt1TtL.js";import{o as g}from"./shapeUtils-1mjmDPYf.js";import{gg as d,g8 as u,aG as b,fU as P}from"./index-BHbsz6E7.js";import"./createPresetServiceEdit-96pgwyt3.js";import"./affineTransformOperator-Cv7CrjcF.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./Transformation2D-CJmlXOyD.js";import"./apiConverter-EydxsXTv.js";import"./ProjectionTransformation-D3JTJlnp.js";import"./jsonConverter-C_7owiWk.js";import"./Transformation-D7IMYJUS.js";import"./offsetOperator-B364ts48.js";import"./operatorOffset-CsFn3WbX.js";function q({templatePart:r,shape:o,edits:s,relationships:m,mode:a}){let i=[];if(d(o))i=g(o);else{if(!u(o))return;i=[o]}const p=l(r.builderConfig);for(const n of i){const e=n.clone();for(const f of e.paths){let t=new b({spatialReference:e.spatialReference,paths:[f],hasZ:e.hasZ,hasM:e.hasM});t&&p&&(t=h(t,p)),t&&c({templatePart:r,shape:t,edits:s,relationships:m,mode:a})}if(a==="digitizing"&&s.length>P)break}}const v=!1;export{q as execute,v as isAsync};
