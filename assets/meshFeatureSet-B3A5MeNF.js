import{i2 as y,p as d,hs as m,aE as S,aN as g,aD as N,A as D}from"./index-oK64vsa1.js";import E from"./Mesh-DlENG1ZA.js";import{i as M,a as F}from"./External-yX6D0b0d.js";import{n as T,i as w}from"./meshFeatureAttributes-DI-by9WH.js";import"./MeshComponent-DogX3ISt.js";import"./meshProperties-C4iW0Ukm.js";import"./MeshVertexAttributes-Rrnp6MLb.js";import"./vertexSpaceConversion-B4xs2qVo.js";import"./vec4-xyeElUzC.js";const I=()=>d.getLogger("esri.rest.support.meshFeatureSet");function k(e,s,t){const r=t.features;t.features=[],delete t.geometryType;const n=g.fromJSON(t);if(n.geometryType="mesh",!t.assetMaps)return n;const o=O(s,t.assetMaps),u=e.sourceSpatialReference??N.WGS84,f=t.globalIdFieldName,{outFields:a}=e,p=a!=null&&a.length>0?b(a.includes("*")?null:new Set(a)):()=>({});for(const i of r){const c=L(i,f,u,s,o);n.features.push(new D({geometry:c,attributes:p(i)}))}return n}function b(e){return({attributes:s})=>{if(!s)return{};if(!e)return s;for(const t in s)e.has(t)||delete s[t];return s}}function L(e,s,t,r,n){const o=e.attributes[s],u=n.get(o);if(u==null||!e.geometry)return null;const f=T(e.attributes,t,r.transformFieldRoles),a=S.fromJSON(e.geometry);a.spatialReference=t;const p=w(e.attributes,r.transformFieldRoles),i=t.isGeographic?"local":"georeferenced",c=P(u);return c?E.createWithExternalSource(f,c,{extent:a,transform:p,vertexSpace:i,unitConversionDisabled:!0}):E.createIncomplete(f,{extent:a,transform:p,vertexSpace:i})}var l;function O(e,s){const t=new Map;for(const r of s){const n=r.parentGlobalId;if(n==null)continue;const o=r.assetName,u=r.assetType,f=r.assetHash,a=r.assetURL,p=r.conversionStatus,i=r.seqNo,c=y(u,e.supportedFormats);if(!c){I().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${u}, but it does not list it as a supported type`);continue}const h=m(t,n,()=>({files:new Map}));m(h.files,o,()=>({name:o,type:u,mimeType:c,status:A(p),parts:[]})).parts[i]={hash:f,url:a}}return t}function P(e){const s=Array.from(e.files.values()),t=new Array;for(const r of s){if(r.status!==l.COMPLETED)return null;const n=new Array;for(const o of r.parts){if(!o)return null;n.push(new M(o.url,o.hash))}t.push(new F(r.name,r.mimeType,n))}return t}function A(e){switch(e){case"COMPLETED":case"SUBMITTED":return l.COMPLETED;case"INPROGRESS":return l.PENDING;default:return l.FAILED}}(function(e){e[e.FAILED=0]="FAILED",e[e.PENDING=1]="PENDING",e[e.COMPLETED=2]="COMPLETED"})(l||(l={}));export{O as assetMapFromAssetMapsJSON,L as extractMesh,k as meshFeatureSetFromJSON};
